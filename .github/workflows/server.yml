
name: server.yml / Allure to server

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: second_test
        type: choice
        options:
          - first_test
          - second_test
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
    # установим Python 3.10 / Chrome (для тестов/Selenium) /
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      # установим зависимости / пакеты (из списка requirements.txt)
      - name: install dependencies
        run: pip install -r requirements.txt
      # Диплоим Тест1
      - name: first_test
        if: "github.event.inputs.deployment_target == 'first_test'"
        run: pytest tests/test_button.py::test_button_exist --alluredir=allure-results
        continue-on-error: true
      # Диплоим Тест2
      - name: second_test
        if: "github.event.inputs.deployment_target == 'second_test'"
        run: pytest tests/test_button.py::test_button_exist_2 --alluredir=allure-results
        continue-on-error: true
      # Диплоим ВСЕ ТЕСТЫ
      - name: all
        if: "github.event.inputs.deployment_target == 'all'"
        run: pytest --alluredir=allure-results
        continue-on-error: true
      # Сохраняем Рез в файл
      - run: sudo apt install zip && zip -r allure-results.zip allure-results
        d
      - name: upload results
        run: >
          UUID=$(curl -X "POST" "http://${{ secrets.SERVER }}/api/result"
          -H 'accept: */*'
          -H 'Content-Type: multipart/form-data'
          -F 'allureResults=@allure-results.zip;type=application/zip'
          | python3 -c "import sys, json; print(json.load(sys.stdin)['uuid']);")
          &&
          curl -X 'POST'
          "http://${{ secrets.SERVER }}/api/report"
          -H 'accept: */*'
          -H 'Content-Type: application/json'
          -d "{\"reportSpec\":{\"path\":[\"pathstring\"],\"executorInfo\":{\"name\":\"GitHub\",\"type\":\"exectype\",\"url\":\"https://github.com/friz25/AutoTest_to_GitAction-192/actions/workflows/server.yml\",\"buildOrder\":0,\"buildName\":\"$GITHUB_RUN_NUMBER\",\"buildUrl\":\"https://github.com/friz25/AutoTest_to_GitAction-192/actions/runs/$GITHUB_RUN_ID\",\"reportName\":\"my_report_name\",\"reportUrl\":\"my_report_url\"}},\"results\":[\"$UUID\"],\"deleteResults\":true}"
      # Сохраняем в файл (чтоб передать в allure)
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path:
            allure-results
          overwrite: true
          retention-days: 1 # cleanup: удалим отчёт через 1 день (чтоб не засорять/раздувать git)