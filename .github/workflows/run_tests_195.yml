name: run_tests_195.yml / Automated tests

on:
  # выбери какие именно тесты запускать (тест1, тест2 ИЛИ может все?)
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: second_test
        type: choice
        options:
          - first_test
          - second_test
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
#  download-history:
#    # if: false
#
#    # установим ОС / Python 3.10 /
#    runs-on: ubuntu-latest
#    name: Download history
#    steps:
#      - name: setup Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: "3.10"
#      - run: >
#          ARTIFACT_ID=$(curl -L
#          -H "Accept: application/vnd.github+json"
#          -H "X-GitHub-Api-Version: 2022-11-28"
#          "https://api.github.com/repos/senior-tester/run-tests-demo/actions/artifacts?name=allure-results"
#          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
#          &&
#          curl -L
#          -H "Accept: application/vnd.github+json"
#          -H "Authorization: Bearer ${{ secrets.TOKEN }}"
#          -H "X-GitHub-Api-Version: 2022-11-28"
#          https://api.github.com/repos/senior-tester/run-tests-demo/actions/artifacts/$ARTIFACT_ID/zip
#          -o artifacts.zip &&
#          REPORT_ID=$(curl -L
#          -H "Accept: application/vnd.github+json"
#          -H "X-GitHub-Api-Version: 2022-11-28"
#          "https://api.github.com/repos/senior-tester/run-tests-demo/actions/artifacts?name=github-pages"
#          | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);")
#          &&
#          curl -L
#          -H "Accept: application/vnd.github+json"
#          -H "Authorization: Bearer ${{ secrets.TOKEN }}"
#          -H "X-GitHub-Api-Version: 2022-11-28"
#          https://api.github.com/repos/senior-tester/run-tests-demo/actions/artifacts/$REPORT_ID/zip
#          -o pages.zip
#      # подгрузим предыдущие отчёты Allure + текущий
#      # И соединим их в один/новый/текущий/конечный
#      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
#      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
#      - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
#      # Сохраняем в файл (чтоб передать в allure)
#      - name: Store allure history
#        uses: actions/upload-artifact@v4
#        with:
#          name: allure-results
#          path:
#            allure-results
#          retention-days: 1

  test:
    runs-on: ubuntu-latest
#    needs: download-history

    steps:
    # установим Python 3.10 / Chrome (для тестов/Selenium) /
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
        # установим зависимости / пакеты (из списка requirements.txt)
      - name: install dependencies
        run: pip install -r requirements.txt
        # подгрузим предыдущие отчёты Allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        # Запустим Тест1
      - name: first_test
        if: "github.event.inputs.deployment_target == 'first_test'"
#        run: pytest tests/test_button.py::test_button_exist --alluredir=allure-results
        run: pytest tests/test_api.py::test_open_s6 --alluredir=allure-results
        continue-on-error: true
        # Запустим Тест2
      - name: second_test
        if: "github.event.inputs.deployment_target == 'second_test'"
#        run: pytest tests/test_button.py::test_button_exist_2 --alluredir=allure-results
        run: pytest tests/test_api.py::test_two_monitors --alluredir=allure-results
        continue-on-error: true
        # Запустим Все Тесты
      - name: all
        if: "github.event.inputs.deployment_target == 'all'"
        run: pytest --alluredir=allure-results
        continue-on-error: true
        # Сохраняем Рез / 'allure-results' в файл (чтоб передать в allure)
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 1 # cleanup: удалим 'allure-results' через 1 день (чтоб не засорять/раздувать git)

  # Сгенерируем отчёт / 'allure-report' в Allure (index.html)
  generate-report:
    # установим ОС / Java / Allure
    runs-on: ubuntu-latest
    needs: test
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft' # See 'Supported distributions' for available options
          java-version: '17'
      # установим Allure
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      # подгрузим предыдущие отчёты Allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      # Сгенерируем текущий/новый отчёт Allure
      - run: allure generate -c allure-results -o _site # *тут '_site' а не 'allure-report' ИБО git всё хранит в '_site'
      # сохраним `allure-report` / визуал (index.html)
      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path:
            _site
          retention-days: 1 # cleanup: удалим `allure-report` через 1 день (чтоб не засорять/раздувать git)

  # Опубликуем/ЗаДиплоим Allure Отчёт (в GitPages)
  publish-report:
    # показать визуал репорт (index.html)
    runs-on: ubuntu-latest
    needs: generate-report
    name: Report publication
    steps:
        # подгрузим предыдущие отчёты Allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        # Диплоим (Allure отчёт) в GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9

